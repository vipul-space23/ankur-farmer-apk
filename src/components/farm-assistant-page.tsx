import React, { useState } from "react";
import {
  ArrowLeft,
  MessageCircle,
  Send,
  Bot,
  User,
  HelpCircle,
  Lightbulb,
  Leaf,
  Mic,
} from "lucide-react";
import { Language, Screen } from "../App";
import { SimpleButton } from "./simple-button";
import { LanguageSelector } from "./language-selector";
import { ImageWithFallback } from "./figma/ImageWithFallback";

interface FarmAssistantPageProps {
  selectedLanguage: Language | null;
  onNavigate: (screen: Screen) => void;
  onLanguageChange: (language: Language) => void;
}

const farmAssistantContent = {
  en: {
    title: "ЁЯМ╛ Farm Assistant",
    subtitle: "Your AI-powered farming companion",
    chatPlaceholder:
      "Ask about crops, weather, pests, fertilizers, or any farming question...",
    send: "Send",
    suggestions: "Quick Questions:",
    suggestionsList: [
      "What's the best time to plant rice?",
      "How to identify pest attacks?",
      "Which fertilizer is best for wheat?",
      "What are signs of nutrient deficiency?",
      "How to improve soil quality?",
      "Best practices for organic farming?",
    ],
    welcomeMessage:
      "Hello! I'm your AI farming assistant. I can help you with crop recommendations, pest management, fertilizer advice, weather-related farming tips, and much more. What would you like to know?",
    sampleResponses: {
      rice: "Rice is best planted during the monsoon season (June-July) when there's adequate water supply. Ensure the soil pH is between 5.5-6.5 and temperature is 20-35┬░C for optimal growth.",
      pest: "Common signs of pest attacks include yellowing leaves, holes in leaves, stunted growth, and visible insects. Regular inspection and organic pest control methods like neem oil can help prevent infestations.",
      fertilizer:
        "For wheat, use NPK fertilizer with ratio 120:60:40 kg/ha. Apply nitrogen in 3 splits - at sowing, tillering, and grain filling stages for best results.",
      deficiency:
        "Nutrient deficiency signs: Yellow leaves (Nitrogen), Purple leaves (Phosphorus), Brown leaf edges (Potassium), Pale leaves (Iron). Soil testing can confirm deficiencies.",
      soil: "Improve soil quality by adding organic matter, crop rotation, maintaining proper pH (6.0-7.5), ensuring good drainage, and avoiding overuse of chemical fertilizers.",
      organic:
        "Organic farming practices: Use compost and green manure, practice crop rotation, biological pest control, avoid synthetic pesticides and fertilizers, maintain biodiversity.",
    },
  },
  hi: {
    title: "ЁЯМ╛ рдЦреЗрддреА рд╕рд╣рд╛рдпрдХ",
    subtitle: "рдЖрдкрдХрд╛ AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдЦреЗрддреА рд╕рд╛рдереА",
    chatPlaceholder:
      "рдлрд╕рд▓, рдореМрд╕рдо, рдХреАрдЯ, рдЙрд░реНрд╡рд░рдХ, рдпрд╛ рдХрд┐рд╕реА рднреА рдЦреЗрддреА рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...",
    send: "рднреЗрдЬреЗрдВ",
    suggestions: "рддреНрд╡рд░рд┐рдд рд╕рд╡рд╛рд▓:",
    suggestionsList: [
      "рдзрд╛рди рдмреЛрдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рдордп рдХреНрдпрд╛ рд╣реИ?",
      "рдХреАрдЯ рдЖрдХреНрд░рдордг рдХреА рдкрд╣рдЪрд╛рди рдХреИрд╕реЗ рдХрд░реЗрдВ?",
      "рдЧреЗрд╣реВрдВ рдХреЗ рд▓рд┐рдП рдХреМрди рд╕реА рдЦрд╛рдж рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреА рд╣реИ?",
      "рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рдХреА рдХрдореА рдХреЗ рд╕рдВрдХреЗрдд рдХреНрдпрд╛ рд╣реИрдВ?",
      "рдорд┐рдЯреНрдЯреА рдХреА рдЧреБрдгрд╡рддреНрддрд╛ рдХреИрд╕реЗ рд╕реБрдзрд╛рд░реЗрдВ?",
      "рдЬреИрд╡рд┐рдХ рдЦреЗрддреА рдХреА рд╕рд░реНрд╡реЛрддреНрддрдо рдкреНрд░рдерд╛рдПрдВ?",
    ],
    welcomeMessage:
      "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ AI рдЦреЗрддреА рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдореИрдВ рдлрд╕рд▓ рд╕реБрдЭрд╛рд╡, рдХреАрдЯ рдкреНрд░рдмрдВрдзрди, рдЙрд░реНрд╡рд░рдХ рд╕рд▓рд╛рд╣, рдореМрд╕рдо рд╕рдВрдмрдВрдзреА рдЦреЗрддреА рдпреБрдХреНрддрд┐рдпрд╛рдВ рдФрд░ рдмрд╣реБрдд рдХреБрдЫ рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдЖрдк рдХреНрдпрд╛ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
    sampleResponses: {
      rice: "рдзрд╛рди рдмреЛрдирд╛ рдорд╛рдирд╕реВрди рдХреЗ рджреМрд░рд╛рди (рдЬреВрди-рдЬреБрд▓рд╛рдИ) рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╣реЛрддрд╛ рд╣реИ рдЬрдм рдкрд░реНрдпрд╛рдкреНрдд рдкрд╛рдиреА рдХреА рдЖрдкреВрд░реНрддрд┐ рд╣реЛред рдорд┐рдЯреНрдЯреА рдХрд╛ pH 5.5-6.5 рдФрд░ рддрд╛рдкрдорд╛рди 20-35┬░C рд╣реЛ рддреЛ рдЕрдЪреНрдЫреА рдмрдврд╝рд╡рд╛рд░ рд╣реЛрддреА рд╣реИред",
      pest: "рдХреАрдЯ рдЖрдХреНрд░рдордг рдХреЗ рд╕рд╛рдорд╛рдиреНрдп рд▓рдХреНрд╖рдг: рдкрддреНрддрд┐рдпреЛрдВ рдХрд╛ рдкреАрд▓рд╛ рд╣реЛрдирд╛, рдкрддреНрддрд┐рдпреЛрдВ рдореЗрдВ рдЫреЗрдж, рдмрдврд╝рд╡рд╛рд░ рд░реБрдХрдирд╛, рдФрд░ рджрд┐рдЦрд╛рдИ рджреЗрдиреЗ рд╡рд╛рд▓реЗ рдХреАрдбрд╝реЗред рдирд┐рдпрдорд┐рдд рдирд┐рд░реАрдХреНрд╖рдг рдФрд░ рдиреАрдо рддреЗрд▓ рдЬреИрд╕реЗ рдЬреИрд╡рд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдЙрдкрд╛рдп рдорджрдж рдХрд░рддреЗ рд╣реИрдВред",
      fertilizer:
        "рдЧреЗрд╣реВрдВ рдХреЗ рд▓рд┐рдП NPK рдЦрд╛рдж 120:60:40 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░ рдЕрдиреБрдкрд╛рдд рдореЗрдВ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред рдирд╛рдЗрдЯреНрд░реЛрдЬрди рдХреЛ 3 рдмрд╛рд░ рдореЗрдВ рджреЗрдВ - рдмреБрдЖрдИ, рдХрд▓реНрд▓реЗ рдирд┐рдХрд▓рдиреЗ рдФрд░ рджрд╛рдирд╛ рднрд░рдиреЗ рдХреЗ рд╕рдордпред",
      deficiency:
        "рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рдХреА рдХрдореА рдХреЗ рд╕рдВрдХреЗрдд: рдкреАрд▓реА рдкрддреНрддрд┐рдпрд╛рдВ (рдирд╛рдЗрдЯреНрд░реЛрдЬрди), рдмреИрдВрдЧрдиреА рдкрддреНрддрд┐рдпрд╛рдВ (рдлрд╛рд╕реНрдлреЛрд░рд╕), рднреВрд░реЗ рдХрд┐рдирд╛рд░реЗ (рдкреЛрдЯрд╛рд╢), рдлреАрдХреА рдкрддреНрддрд┐рдпрд╛рдВ (рдЖрдпрд░рди)ред рдорд┐рдЯреНрдЯреА рдкрд░реАрдХреНрд╖рдг рд╕реЗ рдкреБрд╖реНрдЯрд┐ рд╣реЛ рд╕рдХрддреА рд╣реИред",
      soil: "рдорд┐рдЯреНрдЯреА рдХреА рдЧреБрдгрд╡рддреНрддрд╛ рд╕реБрдзрд╛рд░рдиреЗ рдХреЗ рд▓рд┐рдП: рдЬреИрд╡рд┐рдХ рдкрджрд╛рд░реНрде рдорд┐рд▓рд╛рдПрдВ, рдлрд╕рд▓ рдЪрдХреНрд░ рдЕрдкрдирд╛рдПрдВ, рдЙрдЪрд┐рдд pH (6.0-7.5) рдмрдирд╛рдП рд░рдЦреЗрдВ, рдЕрдЪреНрдЫреА рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред",
      organic:
        "рдЬреИрд╡рд┐рдХ рдЦреЗрддреА рдХреА рдкреНрд░рдерд╛рдПрдВ: рдХрдВрдкреЛрд╕реНрдЯ рдФрд░ рд╣рд░реА рдЦрд╛рдж рдХрд╛ рдЙрдкрдпреЛрдЧ, рдлрд╕рд▓ рдЪрдХреНрд░, рдЬреИрд╡рд┐рдХ рдХреАрдЯ рдирд┐рдпрдВрддреНрд░рдг, рдХреГрддреНрд░рд┐рдо рдХреАрдЯрдирд╛рд╢рдХреЛрдВ рд╕реЗ рдмрдЪрд╛рд╡, рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рдмрдирд╛рдП рд░рдЦреЗрдВред",
    },
  },
  ta: {
    title: "ЁЯМ╛ ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ропро╛ро│ро░рпН",
    subtitle: "роЙроЩрпНроХро│рпН AI-роЗропроЩрпНроХрпБроорпН ро╡ро┐ро╡роЪро╛роп родрпБрогрпИро╡ройрпН",
    chatPlaceholder:
      "рокропро┐ро░рпНроХро│рпН, ро╡ро╛ройро┐ро▓рпИ, рокрпВроЪрпНроЪро┐роХро│рпН, роЙро░роЩрпНроХро│рпН роЕро▓рпНро▓родрпБ роОроирпНрод ро╡ро┐ро╡роЪро╛роп роХрпЗро│рпНро╡ро┐ропрпИропрпБроорпН роХрпЗро│рпБроЩрпНроХро│рпН...",
    send: "роЕройрпБрокрпНрокрпБ",
    suggestions: "ро╡ро┐ро░рпИро╡рпБ роХрпЗро│рпНро╡ро┐роХро│рпН:",
    suggestionsList: [
      "роирпЖро▓рпН ро╡ро┐родрпИроХрпНроХ роЪро┐ро▒роирпНрод роирпЗро░роорпН роОродрпБ?",
      "рокрпВроЪрпНроЪро┐родрпН родро╛роХрпНроХрпБродро▓рпИ роОро╡рпНро╡ро╛ро▒рпБ роХрогрпНроЯро▒ро┐ропро▓ро╛роорпН?",
      "роХрпЛродрпБроорпИроХрпНроХрпБ роОроирпНрод роЙро░роорпН роЪро┐ро▒роирпНродродрпБ?",
      "роКроЯрпНроЯроЪрпНроЪродрпНродрпБ роХрпБро▒рпИрокро╛роЯрпНроЯро┐ройрпН роЕро▒ро┐роХрпБро▒ро┐роХро│рпН роОройрпНрой?",
      "роорогрпНрогро┐ройрпН родро░родрпНродрпИ роОро╡рпНро╡ро╛ро▒рпБ роорпЗроорпНрокроЯрпБродрпНродрпБро╡родрпБ?",
      "роЗропро▒рпНроХрпИ ро╡ро┐ро╡роЪро╛ропродрпНродро┐ройрпН роЪро┐ро▒роирпНрод роироЯрпИроорпБро▒рпИроХро│рпН?",
    ],
    welcomeMessage:
      "ро╡рогроХрпНроХроорпН! роиро╛ройрпН роЙроЩрпНроХро│рпН AI ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ропро╛ро│ро░рпН. рокропро┐ро░рпН рокро░ро┐роирпНродрпБро░рпИроХро│рпН, рокрпВроЪрпНроЪро┐ роорпЗро▓ро╛рогрпНроорпИ, роЙро░ роЖро▓рпЛроЪройрпИ, ро╡ро╛ройро┐ро▓рпИ родрпКроЯро░рпНрокро╛рой ро╡ро┐ро╡роЪро╛роп роХрпБро▒ро┐рокрпНрокрпБроХро│рпН рооро▒рпНро▒рпБроорпН рокро▓ро╡ро▒рпНро▒ро┐ро▓рпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ роорпБроЯро┐ропрпБроорпН. роирпАроЩрпНроХро│рпН роОройрпНрой родрпЖро░ро┐роирпНродрпБ роХрпКро│рпНро│ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│рпН?",
    sampleResponses: {
      rice: "роирпЖро▓рпН ро╡ро┐родрпИрокрпНрокрпБ рооро┤рпИроХрпНроХро╛ро▓родрпНродро┐ро▓рпН (роЬрпВройрпН-роЬрпВро▓рпИ) рокрпЛродрпБрооро╛рой роирпАро░рпН ро╡ро┤роЩрпНроХро▓рпН роЗро░рпБроХрпНроХрпБроорпН рокрпЛродрпБ роЪро┐ро▒роирпНродродрпБ. роорогрпНрогро┐ройрпН pH 5.5-6.5 рооро▒рпНро▒рпБроорпН ро╡рпЖрокрпНрокроиро┐ро▓рпИ 20-35┬░C роЗро░рпБроирпНродро╛ро▓рпН роЪро┐ро▒роирпНрод ро╡ро│ро░рпНроЪрпНроЪро┐ роХро┐роЯрпИроХрпНроХрпБроорпН.",
      pest: "рокрпВроЪрпНроЪро┐родрпН родро╛роХрпНроХрпБродро▓ро┐ройрпН рокрпКродрпБро╡ро╛рой роЕро▒ро┐роХрпБро▒ро┐роХро│рпН: роЗро▓рпИроХро│рпН роороЮрпНроЪро│ро╛ро╡родрпБ, роЗро▓рпИроХро│ро┐ро▓рпН родрпБро│рпИроХро│рпН, ро╡ро│ро░рпНроЪрпНроЪро┐ родроЯрпИрокроЯрпБро╡родрпБ, рокрпВроЪрпНроЪро┐роХро│рпН родрпЖро░ро┐ро╡родрпБ. ро╡рпЗрокрпНрокрпЖрогрпНрогрпЖропрпН рокрпЛройрпНро▒ роЗропро▒рпНроХрпИ роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ роорпБро▒рпИроХро│рпН роЙродро╡рпБроорпН.",
      fertilizer:
        "роХрпЛродрпБроорпИроХрпНроХрпБ NPK роЙро░роорпН 120:60:40 роХро┐ро▓рпЛ/ро╣рпЖроХрпНроЯро░рпН ро╡ро┐роХро┐родродрпНродро┐ро▓рпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роирпИроЯрпНро░роЬройрпИ 3 роорпБро▒рпИропро╛роХ - ро╡ро┐родрпИрокрпНрокрпБ, роХро┐ро│рпИ ро╡ро┐роЯрпБроорпН рооро▒рпНро▒рпБроорпН родро╛ройро┐ропроорпН роия┐╜я┐╜ро░роорпНрокрпБроорпН роирпЗро░родрпНродро┐ро▓рпН роХрпКроЯрпБроХрпНроХро╡рпБроорпН.",
      deficiency:
        "роКроЯрпНроЯроЪрпНроЪродрпНродрпБ роХрпБро▒рпИрокро╛роЯрпНроЯро┐ройрпН роЕро▒ро┐роХрпБро▒ро┐роХро│рпН: роороЮрпНроЪро│рпН роЗро▓рпИроХро│рпН (роирпИроЯрпНро░роЬройрпН), роКродро╛ роЗро▓рпИроХро│рпН (рокро╛ро╕рпНрокро░ро╕рпН), рокро┤рпБрокрпНрокрпБ ро╡ро┐ро│ро┐роорпНрокрпБроХро│рпН (рокрпКроЯрпНроЯро╛роЪро┐ропроорпН), ро╡рпЖро│ро┐ро▒ро┐роп роЗро▓рпИроХро│рпН (роЗро░рпБроорпНрокрпБ).",
      soil: "роорогрпНрогро┐ройрпН родро░родрпНродрпИ роорпЗроорпНрокроЯрпБродрпНрод: роЗропро▒рпНроХрпИ рокрпКро░рпБроЯрпНроХро│рпН роЪрпЗро░рпНрокрпНрокродрпБ, рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐, роЪро░ро┐ропро╛рой pH (6.0-7.5) рокро░ро╛рооро░ро┐рокрпНрокрпБ, роиро▓рпНро▓ ро╡роЯро┐роХро╛ро▓рпН роЙро▒рпБродро┐ роЪрпЖропрпНро╡родрпБ.",
      organic:
        "роЗропро▒рпНроХрпИ ро╡ро┐ро╡роЪро╛роп роироЯрпИроорпБро▒рпИроХро│рпН: роХроорпНрокрпЛро╕рпНроЯрпН рооро▒рпНро▒рпБроорпН рокроЪрпБроирпНродро╛ро│рпН роЙро░роорпН, рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐, роЙропро┐ро░ро┐ропро▓рпН рокрпВроЪрпНроЪро┐ роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ, роЪрпЖропро▒рпНроХрпИ рокрпВроЪрпНроЪро┐роХрпНроХрпКро▓рпНро▓ро┐роХро│рпИ родро╡ро┐ро░рпНрокрпНрокродрпБ.",
    },
  },
};

export function FarmAssistantPage({
  selectedLanguage,
  onNavigate,
  onLanguageChange,
}: FarmAssistantPageProps) {
  const [chatMessage, setChatMessage] = useState("");
  const [chatHistory, setChatHistory] = useState<
    { message: string; isUser: boolean; timestamp: Date }[]
  >([]);

  const langCode = selectedLanguage?.code || "en";
  const content =
    farmAssistantContent[
      langCode as keyof typeof farmAssistantContent
    ] || farmAssistantContent.en;

  // Initialize with welcome message
  React.useEffect(() => {
    if (chatHistory.length === 0) {
      setChatHistory([
        {
          message: content.welcomeMessage,
          isUser: false,
          timestamp: new Date(),
        },
      ]);
    }
  }, [content.welcomeMessage, chatHistory.length]);

  const handleSendMessage = (message?: string) => {
    const messageToSend = message || chatMessage;
    if (!messageToSend.trim()) return;

    // Add user message
    const userMessage = {
      message: messageToSend,
      isUser: true,
      timestamp: new Date(),
    };

    // Generate AI response based on message content
    let aiResponse = "";
    const lowerMessage = messageToSend.toLowerCase();

    if (
      lowerMessage.includes("rice") ||
      lowerMessage.includes("рдзрд╛рди") ||
      lowerMessage.includes("роирпЖро▓рпН")
    ) {
      aiResponse = content.sampleResponses.rice;
    } else if (
      lowerMessage.includes("pest") ||
      lowerMessage.includes("рдХреАрдЯ") ||
      lowerMessage.includes("рокрпВроЪрпНроЪро┐")
    ) {
      aiResponse = content.sampleResponses.pest;
    } else if (
      lowerMessage.includes("fertilizer") ||
      lowerMessage.includes("wheat") ||
      lowerMessage.includes("рдЦрд╛рдж") ||
      lowerMessage.includes("рдЙрд░реНрд╡рд░рдХ") ||
      lowerMessage.includes("роХрпЛродрпБроорпИ")
    ) {
      aiResponse = content.sampleResponses.fertilizer;
    } else if (
      lowerMessage.includes("deficiency") ||
      lowerMessage.includes("nutrient") ||
      lowerMessage.includes("рдХрдореА") ||
      lowerMessage.includes("роХрпБро▒рпИрокро╛роЯрпБ")
    ) {
      aiResponse = content.sampleResponses.deficiency;
    } else if (
      lowerMessage.includes("soil") ||
      lowerMessage.includes("рдорд┐рдЯреНрдЯреА") ||
      lowerMessage.includes("роорогрпН")
    ) {
      aiResponse = content.sampleResponses.soil;
    } else if (
      lowerMessage.includes("organic") ||
      lowerMessage.includes("рдЬреИрд╡рд┐рдХ") ||
      lowerMessage.includes("роЗропро▒рпНроХрпИ")
    ) {
      aiResponse = content.sampleResponses.organic;
    } else {
      // Default response
      aiResponse =
        langCode === "hi"
          ? "рдореИрдВ рдЖрдкрдХреА рдЦреЗрддреА рд╕рдВрдмрдВрдзреА рд╕рд╣рд╛рдпрддрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдБ рд╣реВрдБред рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рд╡рд┐рд╕реНрддрд╛рд░ рд╕реЗ рдмрддрд╛рдПрдВ рдпрд╛ рдКрдкрд░ рджрд┐рдП рдЧрдП рд╕реБрдЭрд╛рд╡реЛрдВ рдореЗрдВ рд╕реЗ рдХреЛрдИ рдЪреБрдиреЗрдВред"
          : langCode === "ta"
            ? "роЙроЩрпНроХро│рпН ро╡ро┐ро╡роЪро╛роп роХрпЗро│рпНро╡ро┐роХро│рпБроХрпНроХрпБ роЙродро╡ роиро╛ройрпН роЗроЩрпНроХрпЗ роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН. родропро╡рпБроЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН роХрпЗро│рпНро╡ро┐ропрпИ ро╡ро┐ро░ро┐ро╡ро╛роХ роХрпВро▒рпБроЩрпНроХро│рпН роЕро▓рпНро▓родрпБ роорпЗро▓рпЗ роЙро│рпНро│ рокро░ро┐роирпНродрпБро░рпИроХро│ро┐ро▓рпН роПродрпЗройрпБроорпН роТройрпНро▒рпИродрпН родрпЗро░рпНро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН."
            : "I'm here to help with your farming questions. Please tell me more about what you'd like to know, or choose from the suggestions above.";
    }

    const aiResponseMessage = {
      message: aiResponse,
      isUser: false,
      timestamp: new Date(),
    };

    setChatHistory((prev) => [
      ...prev,
      userMessage,
      aiResponseMessage,
    ]);
    setChatMessage("");
  };

  const handleSuggestionClick = (suggestion: string) => {
    handleSendMessage(suggestion);
  };

  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-b from-green-50 to-white">
      {/* Header */}
      <div className="bg-green-600 text-white p-6 sticky top-0 z-10 shadow-md">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center space-x-3">
            <SimpleButton
              onClick={() => onNavigate("home")}
              variant="ghost"
              size="icon"
              className="text-white hover:bg-green-700"
            >
              <ArrowLeft className="w-5 h-5" />
            </SimpleButton>
            <div>
              <h1 className="text-xl font-bold">
                {content.title}
              </h1>
              <p className="text-green-100 text-sm">
                {content.subtitle}
              </p>
            </div>
          </div>
          <LanguageSelector
            selectedLanguage={selectedLanguage}
            onLanguageChange={onLanguageChange}
            variant="header"
          />
        </div>
      </div>

      {/* Chat Content */}
      <div className="flex-1 flex flex-col">
        {/* Suggestions */}
        <div className="p-4 bg-white border-b">
          <div className="flex items-center space-x-2 mb-3">
            <HelpCircle className="w-4 h-4 text-green-600" />
            <h3 className="text-sm font-semibold text-gray-800">
              {content.suggestions}
            </h3>
          </div>
          <div className="flex flex-wrap gap-2">
            {content.suggestionsList.map(
              (suggestion, index) => (
                <SimpleButton
                  key={index}
                  onClick={() =>
                    handleSuggestionClick(suggestion)
                  }
                  variant="outline"
                  size="sm"
                  className="text-xs bg-green-50 border-green-200 text-green-700 hover:bg-green-100"
                >
                  {suggestion}
                </SimpleButton>
              ),
            )}
          </div>
        </div>

        {/* Chat Messages */}
        <div className="flex-1 overflow-y-auto p-4 space-y-4">
          {chatHistory.map((chat, index) => (
            <div
              key={index}
              className={`flex ${chat.isUser ? "justify-end" : "justify-start"}`}
            >
              <div
                className={`max-w-xs lg:max-w-md flex items-start space-x-2 ${
                  chat.isUser
                    ? "flex-row-reverse space-x-reverse"
                    : ""
                }`}
              >
                <div
                  className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${
                    chat.isUser ? "bg-green-500" : "bg-gray-200"
                  }`}
                >
                  {chat.isUser ? (
                    <User className="w-4 h-4 text-white" />
                  ) : (
                    <ImageWithFallback
                      src="https://i.pinimg.com/736x/5f/fe/c0/5ffec07ae6b545b6a22ae2a72801756e.jpg"
                      alt="Chatbot"
                      className="w-8 h-8 rounded-full object-cover"
                    />
                  )}
                </div>
                <div
                  className={`p-3 rounded-lg ${
                    chat.isUser
                      ? "bg-green-500 text-white"
                      : "bg-white text-gray-800 border border-gray-200 shadow-sm"
                  }`}
                >
                  <p className="text-sm">{chat.message}</p>
                  <p
                    className={`text-xs mt-1 ${
                      chat.isUser
                        ? "text-green-100"
                        : "text-gray-500"
                    }`}
                  >
                    {chat.timestamp.toLocaleTimeString([], {
                      hour: "2-digit",
                      minute: "2-digit",
                    })}
                  </p>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Chat Input */}
        <div className="p-4 border-t bg-white">
          <div className="flex items-center space-x-2">
            {/* Farmer Image */}
            <div className="w-10 h-10 rounded-full overflow-hidden flex-shrink-0">
              <ImageWithFallback
                src="https://i.pinimg.com/736x/5f/fe/c0/5ffec07ae6b545b6a22ae2a72801756e.jpg"
                alt="Farm Assistant"
                className="w-full h-full object-cover"
              />
            </div>

            {/* Chat Input with Microphone */}
            <div className="flex-1 relative">
              <input
                type="text"
                value={chatMessage}
                onChange={(e) => setChatMessage(e.target.value)}
                placeholder={content.chatPlaceholder}
                className="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                onKeyPress={(e) =>
                  e.key === "Enter" && handleSendMessage()
                }
              />
              <button className="absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-green-500 transition-colors">
                <Mic className="w-4 h-4" />
              </button>
            </div>

            <SimpleButton
              onClick={() => handleSendMessage()}
              className="px-4 py-3 bg-green-500 hover:bg-green-600 text-white"
            >
              <Send className="w-4 h-4" />
            </SimpleButton>
          </div>
        </div>
      </div>
    </div>
  );
}